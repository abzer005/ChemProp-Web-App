name: Build executable for Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-executable:
    runs-on: windows-latest

    env:
      PYTHON_VERSION: 3.11.0

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python embeddable version
      run: |
        mkdir python-${{ env.PYTHON_VERSION }}
        curl -O https://www.python.org/ftp/python/${{ env.PYTHON_VERSION }}/python-${{ env.PYTHON_VERSION }}-embed-amd64.zip
        unzip python-${{ env.PYTHON_VERSION }}-embed-amd64.zip -d python-${{ env.PYTHON_VERSION }}
        rm python-${{ env.PYTHON_VERSION }}-embed-amd64.zip

    - name: Install pip
      run: |
        curl -O https://bootstrap.pypa.io/get-pip.py
        ./python-${{ env.PYTHON_VERSION }}/python get-pip.py --no-warn-script-location
        rm get-pip.py

    - name: Uncomment 'import site' in python311._pth file
      run: |
        sed -i 's/#import site/import site/' python-${{ env.PYTHON_VERSION }}/python311._pth

    - name: Install Visual C++ Build Tools
      run: |
        choco install visualstudio2019buildtools --version=16.11.7 --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended" -y

    - name: Install Required Packages
      run: |
        .\python-${{ env.PYTHON_VERSION }}\python -m pip install --force-reinstall numpy --no-warn-script-location
        .\python-${{ env.PYTHON_VERSION }}\python -m pip install --force-reinstall -r requirements.txt --no-warn-script-location

    - name: Download Graphviz Installer
      run: |
        curl -L -o graphviz-installer.exe https://gitlab.com/graphviz/graphviz/-/package_files/6164164/download
        curl -L -o graphviz-installer.exe https://gitlab.com/graphviz/graphviz/-/package_files/6164164/download
        cmd.exe /c "if not exist graphviz-installer.exe exit 1"
       
    - name: Install Graphviz
      run: |
        cmd.exe /c "graphviz-installer.exe /SILENT /DIR=""C:\Program Files\Graphviz"""
        del graphviz-installer.exe
      if: success()

    # Install PyGraphviz with Configured Paths
    - name: Install PyGraphviz with Configured Paths
      run: |
        .\python-${{ env.PYTHON_VERSION }}\python -m pip install --config-settings="--global-option=build_ext" `
                  --config-settings="--global-option=-IC:\Program Files\Graphviz\include" `
                  --config-settings="--global-option=-LC:\Program Files\Graphviz\lib" `
                  pygraphviz

    - name: Create ChemProp2.bat file
      run: |
        echo '@echo off' > ChemProp2.bat
        echo '.\\python-${{ env.PYTHON_VERSION }}\\python -m streamlit run Home.py' >> ChemProp2.bat

    - name: Create All-in-one executable folder
      run: |
        mkdir streamlit_exe
        mv python-${{ env.PYTHON_VERSION }} streamlit_exe
        mv ChemProp2.bat streamlit_exe
        cp -r src streamlit_exe
        cp -r pages streamlit_exe
        cp -r assets streamlit_exe
        cp -r example-data streamlit_exe
        cp -r .streamlit streamlit_exe
        cp Home.py streamlit_exe

    - name: Compress streamlit_exe folder to ChemProp2.zip
      run: |
        7z a ChemProp2.zip ./streamlit_exe/* -r

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ChemProp2
        path: ChemProp2.zip
